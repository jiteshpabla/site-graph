# -*- coding: utf-8 -*-
"""web_audit_node_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DaAkGCjGicewndKCknZZcSXKPJCD9-6Z
"""

import pandas as pd
import numpy as np
import re

df = pd.read_csv("edges.csv")
#df

main_url = str(input("Enter the main URL of the website (without https or forward slashes). eg. publicservice.asu.edu\n"))

df = df.drop_duplicates()
# only keeping publicservice.asu.edu targets
keep_within_site = str(input("Do you want to keep only the URLs within "+main_url+"? enter y or n\n"))
if keep_within_site == "y":
  df = df[df.Target.str.contains(main_url)]
df.to_csv("edges_no_duplicates.csv", index=False)

# REMOVING THE MAIN NAVIGATION LINKS
# removing the main navigation from the "Target" column to make sure that we don't keep seeing all of the navigation menu links for every node on our website
# get all the main menu links form the HTML of https://publicservice.asu.edu/admin/structure/menu/manage/main-menu
no_menu_option = str(input("Remove main navigation links from Target column? enter y or n\n"))

if no_menu_option == "y":
  menu_html_filename = str(input("Enter the filename of the html copy of the 'edit menu page' for the website \n eg. the HTML of https://publicservice.asu.edu/admin/structure/menu/manage/main-menu saved in the directory as menu_links.html\n"))
  file = open(menu_html_filename, "r")
  menu_html = file.read()
  #print(menu_html)

  # find all instances of "menu-enabled draggable" class in the html
  menu_tag_list = [m.start() for m in re.finditer('menu-enabled draggable', menu_html)]
  #print(len(menu_tag_list))

  # from all the instances of "menu-enabled draggable" find the <a> tag to get the link
  menu_links_list = []
  for tag in menu_tag_list:
    sub_str = menu_html[tag:tag+250]
    #print(sub_str)
    link_start = sub_str.find('<a href="')
    link_end = sub_str.find('"', link_start+9)
    curr_menu_link = sub_str[link_start+9:link_end]
    
    # add the entire URL if it's not present
    if curr_menu_link[0] == "/":
      curr_menu_link = "https://"+main_url+curr_menu_link
    #print(curr_menu_link)
    menu_links_list.append(curr_menu_link)

  print("---------MENU LINKS----------")
  print(menu_links_list)
  print("number of links: ", len(menu_links_list))
  print("-------MENU LINKS END--------")

  df_no_menu = df[~df['Target'].isin(menu_links_list)]
  df_no_menu.to_csv("edges_no_duplicates_no_menu.csv", index=False)

  print("cleaned up CSVs are saved.")
